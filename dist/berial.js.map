{"version":3,"file":"berial.js","sources":["../src/index.ts"],"sourcesContent":["import { App } from './types'\r\nlet apps:any = []\r\n\r\nexport function register(\r\n  tag: string,\r\n  component: App['component'],\r\n  route: string\r\n) {\r\n  class Berial extends HTMLElement {\r\n    static get componentName() {\r\n      return tag\r\n    }\r\n\r\n    constructor() {\r\n      super()\r\n      for (const k in component) {\r\n        // eslint-disable-next-line @typescript-eslint/no-extra-semi\r\n        ;(this as any)[k] = (component as any)[k]\r\n      }\r\n    }\r\n\r\n    connectedCallback() {\r\n      this.attachShadow({\r\n        mode: 'open',\r\n      })\r\n\r\n      apps.push({\r\n        tag,\r\n        component,\r\n        route,\r\n        element: this,\r\n      })\r\n    }\r\n  }\r\n  const hasDef = window.customElements.get(tag)\r\n  if (!hasDef) {\r\n    customElements.define(tag, Berial)\r\n  }\r\n}\r\n\r\nexport function start() {\r\n  apps.forEach((app:any) => {\r\n    const host = new Proxy(app.element, {\r\n      get(target, key: string) {\r\n        return target[key]\r\n      },\r\n      set(target, key: string, val) {\r\n        target[key] = val\r\n        process(app, host)\r\n        return true\r\n      },\r\n    })\r\n    process(app, host)\r\n  })\r\n}\r\n\r\nfunction process(app: App, host: HTMLElement) {\r\n  const path = window.location.hash || window.location.pathname || '/'\r\n\r\n  if (app.route === path) {\r\n    app.component.mount(host)\r\n  } else {\r\n    app.component.unmount(host)\r\n  }\r\n}\r\n\r\nexport class Sandbox {\r\n  proxy:ProxyConstructor\r\n  constructor() {\r\n    const raw = window as any\r\n    const fake = {}\r\n    const proxy = new Proxy(fake, {\r\n      get(target: any, key: string) {\r\n        return target[key] || raw[key]\r\n      },\r\n      set(target, key, val) {\r\n        target[key] = val\r\n        return true\r\n      },\r\n    })\r\n    this.proxy = proxy\r\n  }\r\n}\r\n\r\nwindow.addEventListener('hashchange', start)\r\nwindow.addEventListener('popstate', start)\r\n"],"names":[],"mappings":";;;;;;EACA,IAAI,IAAI,GAAO,EAAE,CAAA;WAED,QAAQ,CACtB,GAAW,EACX,SAA2B,EAC3B,KAAa;MAEb,MAAM,MAAO,SAAQ,WAAW;UAC9B,WAAW,aAAa;cACtB,OAAO,GAAG,CAAA;WACX;UAED;cACE,KAAK,EAAE,CAAA;cACP,KAAK,MAAM,CAAC,IAAI,SAAS,EAAE;kBAEvB,IAAY,CAAC,CAAC,CAAC,GAAI,SAAiB,CAAC,CAAC,CAAC,CAAA;eAC1C;WACF;UAED,iBAAiB;cACf,IAAI,CAAC,YAAY,CAAC;kBAChB,IAAI,EAAE,MAAM;eACb,CAAC,CAAA;cAEF,IAAI,CAAC,IAAI,CAAC;kBACR,GAAG;kBACH,SAAS;kBACT,KAAK;kBACL,OAAO,EAAE,IAAI;eACd,CAAC,CAAA;WACH;OACF;MACD,MAAM,MAAM,GAAG,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;MAC7C,IAAI,CAAC,MAAM,EAAE;UACX,cAAc,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,CAAA;OACnC;EACH,CAAC;WAEe,KAAK;MACnB,IAAI,CAAC,OAAO,CAAC,CAAC,GAAO;UACnB,MAAM,IAAI,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE;cAClC,GAAG,CAAC,MAAM,EAAE,GAAW;kBACrB,OAAO,MAAM,CAAC,GAAG,CAAC,CAAA;eACnB;cACD,GAAG,CAAC,MAAM,EAAE,GAAW,EAAE,GAAG;kBAC1B,MAAM,CAAC,GAAG,CAAC,GAAG,GAAG,CAAA;kBACjB,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,CAAA;kBAClB,OAAO,IAAI,CAAA;eACZ;WACF,CAAC,CAAA;UACF,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,CAAA;OACnB,CAAC,CAAA;EACJ,CAAC;EAED,SAAS,OAAO,CAAC,GAAQ,EAAE,IAAiB;MAC1C,MAAM,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,IAAI,MAAM,CAAC,QAAQ,CAAC,QAAQ,IAAI,GAAG,CAAA;MAEpE,IAAI,GAAG,CAAC,KAAK,KAAK,IAAI,EAAE;UACtB,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;OAC1B;WAAM;UACL,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;OAC5B;EACH,CAAC;QAEY,OAAO;MAElB;UACE,MAAM,GAAG,GAAG,MAAa,CAAA;UACzB,MAAM,IAAI,GAAG,EAAE,CAAA;UACf,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,EAAE;cAC5B,GAAG,CAAC,MAAW,EAAE,GAAW;kBAC1B,OAAO,MAAM,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAA;eAC/B;cACD,GAAG,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG;kBAClB,MAAM,CAAC,GAAG,CAAC,GAAG,GAAG,CAAA;kBACjB,OAAO,IAAI,CAAA;eACZ;WACF,CAAC,CAAA;UACF,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;OACnB;GACF;EAED,MAAM,CAAC,gBAAgB,CAAC,YAAY,EAAE,KAAK,CAAC,CAAA;EAC5C,MAAM,CAAC,gBAAgB,CAAC,UAAU,EAAE,KAAK,CAAC;;;;;;;;;;;;;;"}